#
# setup of dev tools
#

# install Visual Studio Community 2013 with Update 5
# visual studio homepage

# install Qt 5.5.1 Open Source for VS2013 (here we use the 64-bit variant)
# qt.io

# install CMake 3.3.2 - let cmake be added to the path
# https://cmake.org/download/

# install ActivePerl Community Edition - let perl be added to the path
# http://www.activestate.com/activeperl/downloads

# install Python 3.x - let python be added to the path (e.g. ki18n needs it)
# https://www.python.org/downloads/

# install Git
# http://git-scm.com/download/win - let git be added to the path

# install Jom - unpacked in c:\jom here
# http://wiki.qt.io/Jom

#
# building
#

# open the VS2013 x64 Native Tools Command Prompt (or 32-bit if you choose to use 32-bit Qt)

# setup path to QT and JOM and the mingw parts of Git (for patch and Co.)

set PATH=C:\Qt\Qt5.5.1\5.5\msvc2013_64\bin;c:\jom;"C:\Program Files\Git\usr\bin";%PATH%

# create some compile dir, we use here c:\kate

# go there in the VS2013 prompt

cd C:\kate

# checkout sars repo

git clone git://anongit.kde.org/scratch/sars/kate-windows.git

# create a build dir + let cmake do its job

md build
cd build
cmake -G "NMake Makefiles JOM" -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=..\usr ..\kate-windows

# build

cmake --build . --config Release
